name: Release Helm Chart

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g. 0.2.1)"
        required: true
        default: "0.1.0"

jobs:
  helm-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.12.0'

    - name: Install helm-unittest plugin
      run: |
        helm plugin install https://github.com/helm-unittest/helm-unittest --version v0.6.2

    - name: Create dist directory
      run: mkdir -p dist

    - name: Sync source files to chart
      run: |
        # Ensure chart src directory exists
        mkdir -p charts/kube-web-log-viewer/src

        # Copy source files to chart directory
        cp -r src/* charts/kube-web-log-viewer/src/
        cp pyproject.toml charts/kube-web-log-viewer/

        # Verify files were copied
        echo "Files in chart directory:"
        ls -la charts/kube-web-log-viewer/
        ls -la charts/kube-web-log-viewer/src/

    - name: Update all version references
      run: |
        VERSION="${{ github.event.inputs.version }}"
        echo "Setting version to: $VERSION across all files"

        # Update Chart.yaml with release version
        sed -i "s/^version:.*/version: $VERSION/" charts/kube-web-log-viewer/Chart.yaml
        sed -i "s/^appVersion:.*/appVersion: \"$VERSION\"/" charts/kube-web-log-viewer/Chart.yaml

        # Update pyproject.toml files
        sed -i "s/^version = .*/version = \"$VERSION\"/" pyproject.toml
        sed -i "s/^version = .*/version = \"$VERSION\"/" charts/kube-web-log-viewer/pyproject.toml

        # Update __init__.py files
        sed -i "s/^__version__ = .*/__version__ = \"$VERSION\"/" src/__init__.py
        sed -i "s/^__version__ = .*/__version__ = \"$VERSION\"/" charts/kube-web-log-viewer/src/__init__.py

        # Show updated files
        echo "=== Updated Chart.yaml ==="
        cat charts/kube-web-log-viewer/Chart.yaml
        echo "=== Updated pyproject.toml ==="
        grep "version = " pyproject.toml
        echo "=== Updated charts/pyproject.toml ==="
        grep "version = " charts/kube-web-log-viewer/pyproject.toml
        echo "=== Updated src/__init__.py ==="
        grep "__version__" src/__init__.py
        echo "=== Updated charts/src/__init__.py ==="
        grep "__version__" charts/kube-web-log-viewer/src/__init__.py

    - name: Run Helm tests before packaging
      run: |
        echo "Running Helm unit tests..."
        helm unittest charts/kube-web-log-viewer
        
        echo "Running Helm lint..."
        helm lint charts/kube-web-log-viewer
        
        echo "Testing template generation..."
        helm template test-release charts/kube-web-log-viewer > /dev/null
        echo "All Helm tests passed!"

    - name: Package Helm chart
      run: |
        helm package charts/kube-web-log-viewer --destination dist/
        echo "Packaged charts:"
        ls -la dist/

    - name: Generate Helm repository index
      run: |
        helm repo index dist/ --url https://github.com/${{ github.repository }}/releases/download/v${{ github.event.inputs.version }}/
        echo "Generated index.yaml:"
        cat dist/index.yaml

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.event.inputs.version }}
        name: Release v${{ github.event.inputs.version }}
        files: dist/*.tgz
        generate_release_notes: true

    - name: Setup Git for gh-pages
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Deploy to gh-pages
      run: |
        # Create gh-pages branch if it doesn't exist
        git checkout --orphan gh-pages || git checkout gh-pages

        # Remove all files except .git
        git rm -rf .

        # Copy index.yaml to root
        cp dist/index.yaml .

        # Commit and push
        git add index.yaml
        git commit -m "Update index.yaml for version v${{ github.event.inputs.version }}"
        git push -f origin gh-pages